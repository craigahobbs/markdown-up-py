# Licensed under the MIT License
# https://github.com/craigahobbs/markdown-up/blob/main/LICENSE

include '../markdownUpIndex.bare'


async function testMarkdownUpIndex():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'markdown_up_index': jsonStringify({ \
                'path': '.', \
                'files': [ \
                    {'name': 'a.html', 'display': 'a.md'}, \
                    {'name': 'b.html'}, \
                    {'name': 'c.html', 'display': 'c.md'} \
                ], \
                'directories': ['sub1', 'sub2'] \
            }) \
        } \
    })

    # Render the index
    markdownUpIndex()

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', ['markdown_up_index']], \
        ['documentSetTitle', ['MarkdownUp - .']], \
        ['markdownPrint', [ \
            'Root |', \
            'Parent |', \
            '[MarkdownUp](https://github.com/craigahobbs/markdown-up#readme)', \
            '', \
            '# MarkdownUp \\- .' \
        ]], \
        ['markdownPrint', ['', '## Files']], \
        ['markdownPrint', ['', '[a.md](a.html)']], \
        ['markdownPrint', ['', '[b.html](b.html)']], \
        ['markdownPrint', ['', '[c.md](c.html)']], \
        ['markdownPrint', ['', '## Directories']], \
        ['markdownPrint', ['', "[sub1](#var.vPath='sub1')"]], \
        ['markdownPrint', ['', "[sub2](#var.vPath='sub2')"]] \
    ])
endfunction
unittestRunTest('testMarkdownUpIndex')


async function testMarkdownUpIndex_escapes():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'markdown_up_index': jsonStringify({ \
                'path': '.', \
                'files': [ \
                    {'name': 'a+)b.html', 'display': 'a+)b.md'}, \
                    {'name': 'b+)a.html'} \
                ], \
                'directories': ['sub+)dir'] \
            }) \
        } \
    })

    # Render the index
    markdownUpIndex()

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', ['markdown_up_index']], \
        ['documentSetTitle', ['MarkdownUp - .']], \
        ['markdownPrint', [ \
                'Root |', \
                'Parent |', \
                '[MarkdownUp](https://github.com/craigahobbs/markdown-up#readme)', \
                '', \
                '# MarkdownUp \\- .' \
            ] \
        ], \
        ['markdownPrint', ['', '## Files']], \
        ['markdownPrint', ['', '[a\\+\\)b.md](a+%29b.html)']], \
        ['markdownPrint', ['', '[b\\+\\)a.html](b+%29a.html)']], \
        ['markdownPrint', ['', '## Directories']], \
        ['markdownPrint', ['', "[sub\\+\\)dir](#var.vPath='sub%2B%29dir')"]] \
    ])
endfunction
unittestRunTest('testMarkdownUpIndex_escapes')


async function testMarkdownUpIndex_path():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'markdown_up_index?path=subdir': jsonStringify({ \
                'path': 'subdir', \
                'parent': '.', \
                'files': [ \
                    {'name': 'a.html', 'display': 'a.md'}, \
                    {'name': 'b.html'}, \
                    {'name': 'c.html', 'display': 'c.md'} \
                ], \
                'directories': ['sub1', 'sub2'] \
            }) \
        } \
    })

    # Render the index
    systemGlobalSet('vPath', 'subdir')
    markdownUpIndex()
    systemGlobalSet('vPath', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', ['markdown_up_index?path=subdir']], \
        ['documentSetTitle', ['MarkdownUp - subdir']], \
        ['markdownPrint', [ \
            '[Root](#var=) |', \
            "[Parent](#var.vPath='.') |", \
            '[MarkdownUp](https://github.com/craigahobbs/markdown-up#readme)', \
            '', \
            '# MarkdownUp \\- subdir' \
        ]], \
        ['markdownPrint', ['', '## Files']], \
        ['markdownPrint', ['', '[a.md](subdir/a.html)']], \
        ['markdownPrint', ['', '[b.html](subdir/b.html)']], \
        ['markdownPrint', ['', '[c.md](subdir/c.html)']], \
        ['markdownPrint', ['', '## Directories']], \
        ['markdownPrint', ['', "[sub1](#var.vPath='subdir%2Fsub1')"]], \
        ['markdownPrint', ['', "[sub2](#var.vPath='subdir%2Fsub2')"]] \
    ])
endfunction
unittestRunTest('testMarkdownUpIndex_path')


async function testMarkdownUpIndex_empty():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'markdown_up_index': jsonStringify({ \
                'path': '.', \
                'files': [], \
                'directories': [] \
            }) \
        } \
    })

    # Render the index
    markdownUpIndex()

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', ['markdown_up_index']], \
        ['documentSetTitle', ['MarkdownUp - .']], \
        ['markdownPrint', [ \
            'Root |', \
            'Parent |', \
            '[MarkdownUp](https://github.com/craigahobbs/markdown-up#readme)', \
            '', \
            '# MarkdownUp \\- .' \
        ]], \
        ['markdownPrint', ['', 'No files or sub-directories found']] \
    ])
endfunction
unittestRunTest('testMarkdownUpIndex_empty')


async function testMarkdownUpIndex_onlyFiles():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'markdown_up_index': jsonStringify({ \
                'path': '.', \
                'files': [ \
                    {'name': 'a.html', 'display': 'a.md'}, \
                    {'name': 'c.html', 'display': 'c.md'} \
                ], \
                'directories': [] \
            }) \
        } \
    })

    # Render the index
    markdownUpIndex()

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', ['markdown_up_index']], \
        ['documentSetTitle', ['MarkdownUp - .']], \
        ['markdownPrint', [ \
            'Root |', \
            'Parent |', \
            '[MarkdownUp](https://github.com/craigahobbs/markdown-up#readme)', \
            '', \
            '# MarkdownUp \\- .' \
        ]], \
        ['markdownPrint', ['', '## Files']], \
        ['markdownPrint', ['', '[a.md](a.html)']], \
        ['markdownPrint', ['', '[c.md](c.html)']] \
    ])
endfunction
unittestRunTest('testMarkdownUpIndex_onlyFiles')


async function testMarkdownUpIndex_onlyDirectories():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'markdown_up_index': jsonStringify({ \
                'path': '.', \
                'files': [], \
                'directories': ['sub2', 'sub1'] \
            }) \
        } \
    })

    # Render the index
    markdownUpIndex()

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', ['markdown_up_index']], \
        ['documentSetTitle', ['MarkdownUp - .']], \
        ['markdownPrint', [ \
            'Root |', \
            'Parent |', \
            '[MarkdownUp](https://github.com/craigahobbs/markdown-up#readme)', \
            '', \
            '# MarkdownUp \\- .' \
        ]], \
        ['markdownPrint', ['', '## Directories']], \
        ['markdownPrint', ['', "[sub1](#var.vPath='sub1')"]], \
        ['markdownPrint', ['', "[sub2](#var.vPath='sub2')"]] \
    ])
endfunction
unittestRunTest('testMarkdownUpIndex_onlyDirectories')
